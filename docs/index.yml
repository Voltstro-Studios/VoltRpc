#YamlMime:Home
hero:
  title: VoltRpc
  description: |
    An RPC library which is designed to be both simple to use and fast.
  actions:
  - name: Get Started
    href: articles/overview.md

quickstart:
- title: Install VoltRpc
  content: |
    Add to your project's `csproj`.

    ```xml
    <ItemGroup>
        <PackageReference Include="VoltRpc" Version="3.0.0" />
        <PackageReference Include="VoltRpc.Proxy.Generator" Version="2.1.0" />
    </ItemGroup>
    ```
    
- title: And Start Using!
  content: |
    ```csharp
    [GenerateProxy(GeneratedName = "TestProxy")]
    public interface ITestInterface
    {
      public void DoSomethingCool();
      public int GetTheCoolValue();
    }

    public class TestInterface : ITestInterface
    {
      public void DoSomethingCool()
      {
        Console.WriteLine("Something Cool!");
      }

      public int GetTheCoolValue()
      {
        return 69;
      }
    }

    public class Program
    {
      IPEndPoint ip = new(IPAddress.Loopback, 7767);

      TestInterface test = new();

      //Host
      Host host = new TCPHost(ip);
      host.AddService<ITestInterface>(test);
      host.StartListening().ConfigureAwait(false);

      //Client
      Client client = new TCPClient(ip);
      client.AddService<ITestInterface>();
      client.Connect();

      //Now we can call to method like it was normal C#
      TestProxy proxy = new(client);
      proxy.DoSomethingCool();
    }
    ```

    For a more in-depth guide, see the [setup section](articles/setup.md).

highlights:
- title: Its fast!
  content: |
    Checkout the [benchmarks](articles/benchmarks.md) for more details.
- title: Supports all built-in C# value types
  content: |
    Supports all the built-in value types, including: `Bool`, `Byte`, `Char`, `Decimal`, [etc](articles/types.md).
- title: Simple to use
  content: |
    The use of the VoltRpc's [proxy .NET generator](articles/proxy-generation.md) and type [readers/writers](articles/types.md) allows for ease of use.